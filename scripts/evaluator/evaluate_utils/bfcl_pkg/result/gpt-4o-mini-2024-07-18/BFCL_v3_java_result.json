{"id": "java_0", "result": "[GeometryPresentation.createPresentation(controller=\"mapController\", parent=\"mapArea\")]", "input_token_count": 440, "output_token_count": 15, "latency": 0.9515488147735596}
{"id": "java_1", "result": "[SQLCompletionAnalyzer.makeProposalsFromObject(object=\"Customers\", useShortName=\"true\", params=\"{\\\"limit\\\":\\\"50\\\", \\\"schemaFilter\\\":\\\"public\\\"}\")]", "input_token_count": 492, "output_token_count": 34, "latency": 1.0967257022857666}
{"id": "java_2", "result": "[FireBirdUtils.getViewSourceWithHeader(monitor='dbMonitor', view='EmployeeView', source=\"SELECT * FROM Employee WHERE status = 'active'\")]", "input_token_count": 499, "output_token_count": 33, "latency": 1.4331636428833008}
{"id": "java_3", "result": "[DB2Tablespace.resolveTablespaceReference(monitor='dbMonitor', dataSource='db2DataSource', reference='USERSPACE1')]", "input_token_count": 507, "output_token_count": 29, "latency": 1.1249611377716064}
{"id": "java_4", "result": "[DB2ViewBaseDepCache.prepareObjectsStatement(session='jdbcSession', db2ViewBase='EmployeeView')]", "input_token_count": 448, "output_token_count": 23, "latency": 0.9194715023040771}
{"id": "java_5", "result": "[PlainTextPresentation.createPresentation(controller='dataController', parent='compositeParent')]", "input_token_count": 480, "output_token_count": 17, "latency": 0.8192455768585205}
{"id": "java_6", "result": "[SpreadsheetPresentation.refreshData(refreshMetadata=\"true\", append=\"true\", keepState=\"true\")]", "input_token_count": 481, "output_token_count": 19, "latency": 0.8211426734924316}
{"id": "java_7", "result": "[EFSNIOResource.copy(destination='/backup/data.txt', force='true', monitor='progressTracker')]", "input_token_count": 510, "output_token_count": 21, "latency": 0.8183450698852539}
{"id": "java_8", "result": "[EFSNIOFile.setContents(source=fileStream, force=\"true\", keepHistory=\"false\", monitor=progressMonitor)]", "input_token_count": 544, "output_token_count": 25, "latency": 0.8721575736999512}
{"id": "java_9", "result": "[writeMultiPoint(multiPoint=\"MultiPoint(Point(1,2), Point(3,4), Point(5,6), Point(7,8), Point(9,10))\", xyzmMode=\"XyzmMode.XYZ\", buffer=\"ByteBuffer.allocate(1024)\")]", "input_token_count": 570, "output_token_count": 62, "latency": 1.8926105499267578}
